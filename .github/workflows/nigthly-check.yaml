name: Nightly checks

on:
  push:
  pull_request:
  schedule:
    - cron: "50 7 * * *"

env:
  rust_toolchain: nightly

jobs:
  nightly:
    name: Build | Clippy | Fmt Check (esp32c3)
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt, clippy

      - name: Setup | Std
        run: rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu

      - name: Setup | Default to nightly
        run: rustup default nightly

      - name: Setup | cargo-generate (binary)
        id: binaries
        continue-on-error: true
        run: |
          sudo curl -L "https://github.com/cargo-generate/cargo-generate/releases/latest/download/cargo-generate-$(git ls-remote --refs --sort="version:refname" --tags "https://github.com/cargo-generate/cargo-generate" | cut -d/ -f3- | tail -n1)-x86_64-unknown-linux-gnu.tar.gz" -o "/home/runner/.cargo/bin/cargo-generate.tar.gz"
          tar xf "/home/runner/.cargo/bin/cargo-generate.tar.gz" -C /home/runner/.cargo/bin
          chmod u+x /home/runner/.cargo/bin/cargo-generate

      - name: Setup | cargo-generate (cargo)
        if: steps.binaries.outcome != 'success'
        run: cargo install cargo-generate

      - uses: Swatinem/rust-cache@v1

      - uses: actions/checkout@v3
        with:
          path: /home/runner/work/esp-template/esp-template/github-esp-template

      - name: Generate
        run: cargo generate --path /home/runner/work/esp-template/esp-template/github-esp-template --name test-esp32c3 --vcs none --silent -d mcu=esp32c3 -d devcontainer=false

      - name: Build Project
        run: cd test-esp32c3; cargo build
  previous-nightly:
    name: Build | Clippy | Fmt Check (esp32c3)
    runs-on: ubuntu-latest
    steps:
      - name: Get current date
        uses: josStorer/get-current-time@v2.0.1
        id: current-date
        with:
          format: YYYY-MM-DD
      - name: Set environment
        env:
          NIGHTLY_VERSION: "nightly-${{ steps.current-date.outputs.time }}"
      - name: Setup | Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.NIGHTLY_VERSION }}
          components: rustfmt, clippy

      - name: Setup | Std
        run: rustup component add rust-src --toolchain ${{ env.NIGHTLY_VERSION }}-x86_64-unknown-linux-gnu

      - name: Setup | Default to nightly
        run: rustup default ${{ env.NIGHTLY_VERSION }}

      - name: Setup | cargo-generate (binary)
        id: binaries
        continue-on-error: true
        run: |
          sudo curl -L "https://github.com/cargo-generate/cargo-generate/releases/latest/download/cargo-generate-$(git ls-remote --refs --sort="version:refname" --tags "https://github.com/cargo-generate/cargo-generate" | cut -d/ -f3- | tail -n1)-x86_64-unknown-linux-gnu.tar.gz" -o "/home/runner/.cargo/bin/cargo-generate.tar.gz"
          tar xf "/home/runner/.cargo/bin/cargo-generate.tar.gz" -C /home/runner/.cargo/bin
          chmod u+x /home/runner/.cargo/bin/cargo-generate

      - name: Setup | cargo-generate (cargo)
        if: steps.binaries.outcome != 'success'
        run: cargo install cargo-generate

      - uses: Swatinem/rust-cache@v1

      - uses: actions/checkout@v3
        with:
          path: /home/runner/work/esp-template/esp-template/github-esp-template

      - name: Generate
        run: cargo generate --path /home/runner/work/esp-template/esp-template/github-esp-template --name test-esp32c3 --vcs none --silent -d mcu=esp32c3 -d devcontainer=false

      - name: Build Project
        run: cd test-esp32c3; cargo build
  previous-nightly-2:
    name: Build | Clippy | Fmt Check (esp32c3)
    runs-on: ubuntu-latest
    steps:
      - uses: ajilraju/actions-date@v0.1
        id: date
        with:
          args: date --date='2 days ago'
      - name: Print
        run: echo ${{ steps.date.outputs }}
