name: Nightly checks

on:
  schedule:
    - cron: "50 7 * * *"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  current-nightly:
    name: Current nightly
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
    steps:
      - name: Setup | Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: rust-src
          default: true
      - name: Setup | cargo-generate
        run: cargo install cargo-generate
      - uses: Swatinem/rust-cache@v1
      - name: Generate
        run: cargo generate --git https://github.com/esp-rs/esp-template --name test --vcs none --silent -d mcu=esp32c3 -d devcontainer=false -d alloc=false
      - name: Build Project
        run: cd test; cargo build
  prior-nightly:
    name: Prior nightly
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set env
        run: |
          echo "[toolchain]" > rust-toolchain.toml
          echo "channel = \"nightly-$(date -d '-1 day' '+%Y-%m-%d')\"" >> rust-toolchain.toml
          echo "components = \"rust-src\"" >> rust-toolchain.toml
          echo "profile = \"minimal\"" >> rust-toolchain.toml
          echo "default = \"true\"" >> rust-toolchain.toml
          echo "NIGHTLY_VERSION=nightly-$(date -d '-2 day' '+%Y-%m-%d')" >> $GITHUB_ENV
      - name: Setup | Rust
        uses: actions-rs/toolchain@v1
      - name: Setup | cargo-generate
        run: cargo install cargo-generate
      - uses: Swatinem/rust-cache@v1
      - name: Generate
        run: cargo generate --git https://github.com/esp-rs/esp-template --name test --vcs none --silent -d mcu=esp32c3 -d devcontainer=false -d alloc=false
      - name: Build Project
        run: cd test; cargo +${{ env.NIGHTLY_VERSION }} build
  next-prior-nightly:
    name: Next prior nightly
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set env
        run: |
          echo "[toolchain]" > rust-toolchain.toml
          echo "channel = \"nightly-$(date -d '-1 day' '+%Y-%m-%d')\"" >> rust-toolchain.toml
          echo "components = \"rust-src\"" >> rust-toolchain.toml
          echo "profile = \"minimal\"" >> rust-toolchain.toml
          echo "default = \"true\"" >> rust-toolchain.toml
          echo "NIGHTLY_VERSION=nightly-$(date -d '-2 day' '+%Y-%m-%d')" >> $GITHUB_ENV
          cat rust-toolchain.toml
      - name: Setup | Rust
        uses: actions-rs/toolchain@v1
      - name: Setup | cargo-generate
        run: cargo install cargo-generate
      - uses: Swatinem/rust-cache@v1
      - name: Generate
        run: cargo generate --git https://github.com/esp-rs/esp-template --name test --vcs none --silent -d mcu=esp32c3 -d devcontainer=false -d alloc=false
      - name: Build Project
        run: cd test; cargo +${{ env.NIGHTLY_VERSION }} build
