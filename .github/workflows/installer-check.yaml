name: Test installer by building template projects

on:
  push:
    paths:
      - "install-rust-toolchain.sh"
  pull_request:
    paths:
      - "install-rust-toolchain.sh"
  workflow_dispatch:

jobs:
  esp-idf-v4-4:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        board: ['esp32', 'esp32s3', 'esp32s3', 'esp32c3']
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.rust-build-branch }}
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build
      - name: Install toolchain
        run: |
          bash install-rust-toolchain.sh \
          --extra-crates "ldproxy cargo-generate" \
          --build-target "${{ matrix.board }}" \
          --esp-idf-version "release/v4.4" \
          --minified-esp-idf "YES" \
          --export-file  "${HOME}/export-esp.sh"
      - name: Build template project
        run: |
          source ${HOME}/export-esp.sh
          cargo generate --git https://github.com/esp-rs/esp-idf-template cargo --name test-${{ matrix.board }} --vcs none --silent -d mcu=${{ matrix.board }} -d std=true -d espidfver=v4.4 -d devcontainer=false
          cd test-${{ matrix.board }}
          cargo build
  # esp-idf-master:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       board: ['esp32', 'esp32s3', 'esp32s3', 'esp32c3']
  #   steps:
  #     -
  #       name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         ref: ${{ github.event.inputs.rust-build-branch }}
  #     - name: Install dependencies
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install ninja-build
  #     - name: Install toolchain
  #       run: |
  #         bash install-rust-toolchain.sh \
  #         --extra-crates "ldproxy cargo-generate" \
  #         --build-target "${{ matrix.board }}" \
  #         --esp-idf-version "master" \
  #         --minified-esp-idf "YES" \
  #         --export-file  "${HOME}/export-esp.sh"
  #     - name: Build template project
  #       run: |
  #         source ${HOME}/export-esp.sh
  #         cargo generate --git https://github.com/esp-rs/esp-idf-template cargo --name test-${{ matrix.board }} --vcs none --silent -d mcu=${{ matrix.board }} -d std=true -d espidfver=mainline -d devcontainer=false
  #         cd test-${{ matrix.board }}
  #         cargo build
  bare-metal:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        board: ['esp32', 'esp32s3', 'esp32s3', 'esp32c3']
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.rust-build-branch }}
      - name: Install toolchain
        run: |
          bash install-rust-toolchain.sh \
          --extra-crates "ldproxy cargo-generate" \
          --build-target "${{ matrix.board }}" \
          --export-file  "${HOME}/export-esp.sh"
      - name: Build template project
        run: |
          source ${HOME}/export-esp.sh
          cargo generate --git https://github.com/esp-rs/esp-template --name test-${{ matrix.board }} --vcs none --silent -d mcu=${{ matrix.board }} -d devcontainer=false
          cd test-${{ matrix.board }}
          cargo build
  minified-llvm:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        minified-llvm: ['YES', 'NO']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.rust-build-branch }}
      - name: Install toolchain
        run: |
          bash install-rust-toolchain.sh \
          --minified-llvm "${{ matrix.minified-llvm }}"

